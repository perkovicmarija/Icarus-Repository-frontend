image: node:20.9.0

# size 1x is 4096mb, so 2x gives us 8gb, 8x is 32gb
# options:
#   size: 8x

definitions:
  services:
    docker-large:
      memory: 6000 # default is 1024mb - in dockerfile.prod there is ENV NODE_OPTIONS=--max-old-space-size=5000
      type: docker
    docker:
      memory: 3000 # default is 1024mb - in dockerfile.prod there is ENV NODE_OPTIONS=--max-old-space-size=5000

  steps:
    - step: &docker_build
        name: Build and push Docker image
        size: 2x
        caches:
          - docker
        services:
          - docker
        script:
          - source common_vars.txt
          - |
            echo "Loaded variables - DOCKER_FILE=$DOCKER_FILE,
            DOCKER_TAG_FULL=$DOCKER_TAG_FULL,
            DOCKER_TAG_SLIM=$DOCKER_TAG_SLIM"
          - commit_id=$(echo $BITBUCKET_COMMIT | cut -c1-7)
          - export DOCKER_BUILDKIT=1
          - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          - >
            docker build -f $DOCKER_FILE
            --build-arg FRONTEND_IMAGE_TAG="$DOCKER_TAG_FULL"
            -t $DOCKER_TAG_FULL
            -t $DOCKER_TAG_SLIM .
          - docker push $DOCKER_TAG_FULL
          - docker push $DOCKER_TAG_SLIM
        after-script:
          - echo "Bitbucket exit code -> $BITBUCKET_EXIT_CODE"
          - echo "BITBUCKET_BRANCH -> $BITBUCKET_BRANCH"
          - >
            if [[ $BITBUCKET_EXIT_CODE -eq 0 || "$BITBUCKET_BRANCH" != "master" ]]; then
              exit 0
            elif [[ "$BITBUCKET_BRANCH" == "master" ]]; then
              echo "Step failed!"
            fi
          - pipe: atlassian/slack-notify:2.3.1
            variables:
              WEBHOOK_URL: $SLACK_WEBHOOK_URL
              MESSAGE: "Icarus frontend deployment failed at docker build step.. tag: ${BITBUCKET_TAG} :x:"
              USERNAME: "${BOT_DISPLAY_NAME}"
              ICON_EMOJI: ":warning:"

    - step: &security_scan
        name: Security Scan
        script:
          # Run a security scan for sensitive data.
          # See more security tools at https://bitbucket.org/product/features/pipelines/integrations?&category=security
          - pipe: atlassian/git-secrets-scan:0.4.3
        after-script:
          - source common_vars.txt
          - echo "Bitbucket exit code -> $BITBUCKET_EXIT_CODE"
          - echo "BITBUCKET_BRANCH -> $BITBUCKET_BRANCH"
          - >
            if [[ $BITBUCKET_EXIT_CODE -eq 0 || "$BITBUCKET_BRANCH" != "master" ]]; then
              exit 0
            elif [[ "$BITBUCKET_BRANCH" == "master" ]]; then
              echo "Step failed!"
            fi
          - pipe: atlassian/slack-notify:2.3.1
            variables:
              WEBHOOK_URL: $SLACK_WEBHOOK_URL
              MESSAGE: "Icarus ${CLIENT_NAME_UPERCASE} deployment failed at security scan step..Tag: ${BITBUCKET_TAG} :x:"
              USERNAME: "Bitbucket Pipeline"
              ICON_EMOJI: ":warning:"

    - step: &notify_slack_success
        name: "Notify Slack"
        script:
          - source new_tag.txt
          - source common_vars.txt
          - pipe: atlassian/slack-notify:2.3.1
            variables:
              WEBHOOK_URL: $SLACK_WEBHOOK_URL
              MESSAGE: "Icarus ${CLIENT_NAME_UPERCASE} successfully published to ${BITBUCKET_TAG} :tada: \n\nChangelog:  https://bitbucket.org/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/src/${BITBUCKET_BRANCH}/docs/changelog/CHANGELOG-${BITBUCKET_TAG}.md"
              USERNAME: "${BOT_DISPLAY_NAME}"
              ICON_EMOJI: ":rocket:"

    - step: &update_server_info
        name: Update README Table in Server Info repository
        script:
          - source new_tag.txt
          - source common_vars.txt
          - export TIMESTAMP=$(date +%Y%m%d%H%M)
          - git config --global user.email "${BOT_EMAIL}"
          - git config --global user.name "${BOT_DISPLAY_NAME}"
          - git clone git@bitbucket.org:${BITBUCKET_REPO_OWNER}/icarus-server-info.git
          - cd icarus-server-info
          - sed -i "/| $INSTANCE_NAME *| $CLIENT_NAME_LOWERCASE *|/c\\| $INSTANCE_NAME         | $CLIENT_NAME_LOWERCASE         | [${BITBUCKET_TAG}](https://bitbucket.org/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/src/"$BITBUCKET_BRANCH"/docs/changelog/CHANGELOG-${BITBUCKET_TAG}.md)   | $TIMESTAMP | none | none |" README.md
          - git add README.md
          - git commit -m "Update README with tag ${BITBUCKET_TAG}"
          - git push origin "$BITBUCKET_BRANCH"
        after-script:
          - source common_vars.txt
          - echo "Bitbucket exit code -> $BITBUCKET_EXIT_CODE"
          - echo "BITBUCKET_BRANCH -> $BITBUCKET_BRANCH"
          - >
            if [[ $BITBUCKET_EXIT_CODE -eq 0 || "$BITBUCKET_BRANCH" != "master" ]]; then
              exit 0
            elif [[ "$BITBUCKET_BRANCH" == "master" ]]; then
              echo "Step failed!"
            fi
          - pipe: atlassian/slack-notify:2.3.1
            variables:
              WEBHOOK_URL: $SLACK_WEBHOOK_URL
              MESSAGE: "Icarus ${CLIENT_NAME_UPERCASE} deployment failed at update server info step. Tag: ${BITBUCKET_TAG} :x:"
              USERNAME: "${BOT_DISPLAY_NAME}"
              ICON_EMOJI: ":warning:"

    - step: &generate_changelog_and_tag
        name: Generate changelog and tag
        script:
          - |
            if git remote get-url origin > /dev/null 2>&1; then
              git remote remove origin
              echo "Removed existing remote 'origin'"
            else
              echo "No existing remote 'origin' found"
            fi

          - git remote add origin https://$BOT_USERNAME:$BOT_APP_PASSWORD@bitbucket.org/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}.git
          - |
            if git show-ref --quiet refs/heads/"$BITBUCKET_BRANCH"; then
              # If "$BITBUCKET_BRANCH" exists locally, just check it out
              git checkout "$BITBUCKET_BRANCH" 
            elif git show-ref --quiet refs/remotes/origin/"$BITBUCKET_BRANCH"; then
              # If "$BITBUCKET_BRANCH" exists remotely but not locally, create the local branch and track origin/"$BITBUCKET_BRANCH"
              git checkout -b "$BITBUCKET_BRANCH" origin/"$BITBUCKET_BRANCH"
            else
              echo "Error: '"$BITBUCKET_BRANCH"' branch does not exist on local or remote."
              exit 1
            fi
          - git config pull.rebase false
          - git config user.name "${BOT_DISPLAY_NAME}"
          - git config user.email "${BOT_EMAIL}"
          - git fetch origin
          - git fetch --all --tags
          - git pull origin "$BITBUCKET_BRANCH" --force
          - |
            export PREVIOUS_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null | awk -F'-' '{print $1}' | head -n 1)

            if [ -z "$PREVIOUS_TAG" ]; then
              PREVIOUS_TAG="v0.0.0.0"
            fi

            echo "Previous tag is: $PREVIOUS_TAG"

            mkdir -p docs/changelog/

          - echo "Generating changelog from $PREVIOUS_TAG to the latest commit"
          - git log $PREVIOUS_TAG..HEAD --pretty=format:"- %s" >> docs/changelog/CHANGELOG-tmp.md

          - |
            major=$(echo "$PREVIOUS_TAG" | cut -d. -f1 | tr -d 'v')
            minor=$(echo "$PREVIOUS_TAG" | cut -d. -f2)
            patch=$(echo "$PREVIOUS_TAG" | cut -d. -f3)
            refresh=$(echo "$PREVIOUS_TAG" | cut -d. -f4)

            if grep -q "breaking:" docs/changelog/CHANGELOG-tmp.md; then
                major=$((major + 1))
                minor=0
                patch=0
                refresh=0
            elif grep -q "feat:" docs/changelog/CHANGELOG-tmp.md; then
                minor=$((minor + 1))
                patch=0
                refresh=0
            elif grep -q "fix:" docs/changelog/CHANGELOG-tmp.md; then
                patch=$((patch + 1))
                refresh=0
            else
                refresh=$((refresh + 1))
            fi

            export BITBUCKET_TAG="v${major}.${minor}.${patch}.${refresh}"
            echo "BITBUCKET_TAG=${BITBUCKET_TAG}" > new_tag.txt
            echo "New version determined: $BITBUCKET_TAG"

          - echo "# $BITBUCKET_TAG changelog:" > docs/changelog/CHANGELOG-${BITBUCKET_TAG}.md
          - cat docs/changelog/CHANGELOG-tmp.md >> docs/changelog/CHANGELOG-${BITBUCKET_TAG}.md
          - cat docs/changelog/CHANGELOG-${BITBUCKET_TAG}.md
          - cat docs/changelog/CHANGELOG-${BITBUCKET_TAG}.md > changelog.txt
          - git add docs/changelog/CHANGELOG-${BITBUCKET_TAG}.md
          - 'git commit -m "[docs] chore: Add changelog for $BITBUCKET_TAG"'
          - git tag $BITBUCKET_TAG
          - git push origin "$BITBUCKET_BRANCH" --tags
        artifacts:
          - changelog.txt
          - new_tag.txt
        after-script:
          - source common_vars.txt
          - echo "Bitbucket exit code -> $BITBUCKET_EXIT_CODE"
          - echo "BITBUCKET_BRANCH -> $BITBUCKET_BRANCH"
          - >
            if [[ $BITBUCKET_EXIT_CODE -eq 0 || "$BITBUCKET_BRANCH" != "master" ]]; then
              exit 0
            elif [[ "$BITBUCKET_BRANCH" == "master" ]]; then
              echo "Step failed!"
            fi
          - pipe: atlassian/slack-notify:2.3.1
            variables:
              WEBHOOK_URL: $SLACK_WEBHOOK_URL
              MESSAGE: "Icarus ${CLIENT_NAME_UPERCASE} failed at generate changelog step.. tag: ${BITBUCKET_TAG} :x:"
              USERNAME: "${BOT_DISPLAY_NAME}"
              ICON_EMOJI: ":warning:"

    - step: &common_vars
        name: Generate common vars
        script:
          - CLIENT_NAME_LOWERCASE=icarus-repository-frontend
          - CLIENT_NAME_UPERCASE="${CLIENT_NAME_LOWERCASE^^}"
          - echo "CLIENT_NAME_LOWERCASE=$CLIENT_NAME_LOWERCASE" > common_vars.txt
          - echo "CLIENT_NAME_UPERCASE=$CLIENT_NAME_UPERCASE" >> common_vars.txt
        artifacts:
          - common_vars.txt

pipelines:
  default:
    - step: *common_vars
    - step:
        name: Setup environment to build and push docker image with beta tag
        script:
          - commit_id=$(echo $BITBUCKET_COMMIT | cut -c1-7)
          - echo "DOCKER_TAG_SLIM=$DOCKER_ORGANIZATION_NAME/icarus-repository-frontend:beta" > common_vars.txt
          - echo "DOCKER_TAG_FULL=$DOCKER_ORGANIZATION_NAME/icarus-repository-frontend:beta-${commit_id}" >> common_vars.txt
          - echo "DOCKER_FILE=docker/Dockerfile.prod" >> common_vars.txt
        artifacts:
          - common_vars.txt

    - step:
        <<: *docker_build
        name: Build and Push docker image
        deployment: Staging
  branches:
    master:
      - step: *common_vars
      - step:
          name: Setup environment to build and push docker image with beta tag
          script:
            - commit_id=$(echo $BITBUCKET_COMMIT | cut -c1-7)
            - echo "DOCKER_TAG_SLIM=$DOCKER_ORGANIZATION_NAME/icarus-repository-frontend:beta" > common_vars.txt
            - echo "DOCKER_TAG_FULL=$DOCKER_ORGANIZATION_NAME/icarus-repository-frontend:beta-${commit_id}" >> common_vars.txt
            - echo "DOCKER_FILE=docker/Dockerfile.prod" >> common_vars.txt
          artifacts:
            - common_vars.txt

      - step:
          <<: *docker_build
          name: Build and Push docker image
          deployment: Staging

  custom:
    deploy-dev:
      - step: *common_vars
      - step: *security_scan
      - step:
          name: Setup environment to build and push docker image with dev tag
          script:
            - commit_id=$(echo $BITBUCKET_COMMIT | cut -c1-7)
            - echo "DOCKER_TAG_SLIM=$DOCKER_ORGANIZATION_NAME/icarus-frontend-generic:dev" > common_vars.txt
            - echo "DOCKER_TAG_FULL=$DOCKER_ORGANIZATION_NAME/icarus-frontend-generic:${commit_id}-dev" >> common_vars.txt
            - echo "DOCKER_FILE=docker/Dockerfile.prod" >> common_vars.txt
          artifacts:
            - common_vars.txt

      - step:
          <<: *docker_build
          name: Build and Push docker image
          deployment: Production

    deploy-test:
      - step: *common_vars
      - step: *security_scan
      - step:
          name: Setup environment to build and push docker image with test tag
          script:
            - commit_id=$(echo $BITBUCKET_COMMIT | cut -c1-7)
            - echo "DOCKER_TAG_SLIM=$DOCKER_ORGANIZATION_NAME/icarus-repository-frontend:test" > common_vars.txt
            - echo "DOCKER_TAG_FULL=$DOCKER_ORGANIZATION_NAME/icarus-repository-frontend:${commit_id}-test" >> common_vars.txt
            - echo "DOCKER_FILE=docker/Dockerfile.prod" >> common_vars.txt
          artifacts:
            - common_vars.txt

      - step:
          <<: *docker_build
          name: Build and Push docker image
          deployment: Test

    deploy-production:
      - step: *common_vars
      - step: *security_scan
      - step: *generate_changelog_and_tag

      - step:
          name: Setup environment to build and push docker image with stable tag
          script:
            - source new_tag.txt
            - echo "DOCKER_TAG_SLIM=$DOCKER_ORGANIZATION_NAME/icarus-repository-frontend:stable" > common_vars.txt
            - echo "DOCKER_TAG_FULL=$DOCKER_ORGANIZATION_NAME/icarus-repository-frontend:stable-${BITBUCKET_TAG}" >> common_vars.txt
            - echo "DOCKER_FILE=docker/Dockerfile.prod" >> common_vars.txt
          artifacts:
            - common_vars.txt

      - step:
          <<: *docker_build
          name: Build and Push docker image
          deployment: Production

      - step: *update_server_info
      - step: *notify_slack_success
